@model Repozytorium.Models.ZdjeciePlik

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Galeria", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>ZdjeciePlik</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.UzytkownikId, "UzytkownikId", htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownList("UzytkownikId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UzytkownikId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.SizeName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.SizeName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SizeName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ImgBytes, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.TextBoxFor(model => model.ImgBytes,
            new { type = "file", @class = "form-control", @onchange = "checkFile(this);" })
        @Html.ValidationMessageFor(model => model.ImgBytes, "", new { @class = "text-danger" })
      </div>
    </div>
    @*Pure Html*@
    @*<div class="form-group">
        <label class="control-label col-md-2" for="ImgBytes">Wybierz plik</label>
        <div class="col-md-10">
          <input class="form-control" data-val="true" data-val-required="Wybranie pliku jest wymagane."
                 id="ImgBytes" name="ImgBytes" type="file" value="" />
          <span class="field-validation-valid text-danger" data-valmsg-for="ImgBytes" data-valmsg-replace="true"></span>
        </div>
      </div>*@

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts{

  <script type="text/javascript">

    function checkFile(fieldObj) {
      var FileName = fieldObj.value;
      var FileExt = FileName.substr(FileName.lastIndexOf('.') + 1);
      var FileSize = fieldObj.files[0].size;
      var FileSizeMB = 4;

      if ((FileExt != "jpg" && FileExt != "gif" && FileExt != "png" && FileExt != "jpeg" && FileExt != "bmp")
        || FileSize > 1048576 * 4) {
        var error = "Typ pliku : " + FileExt + "\n\n";
        error += "Rozmiar pliku: " + FileSizeMB + " MB \n\n";
        error += "Akceptowane typy plików: jpg, png, gif, bmp. Maksymalny rozmiar 4 MB.\n\n";

        alert(error);
        return false;
      }
      return true;
    }
  </script>
}
